lines(exp_base, exp_dt, col='cadetblue1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='brown1')
lines(exp_base, exp_dt, col='cadetblue1')
lines(exp_base, exp_dt, lwd=2, col='darkgoldenrod1')
lines(exp_base, exp_dt, lwd=2, col='cyan2')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='coral')
lines(exp_base, exp_dt, lwd=2, col='cyan2')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='chocolate1')
lines(exp_base, exp_dt, lwd=2, col='cyan2')
?legend
legend(legend=('Exp(0.02992)'), col='cyan2')
legend('topleft', legend=('Exp(0.02992)'), col='cyan2')
legend('topright', legend=('Exp(0.02992)'), col='cyan2', lwd=2)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan2')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan1')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan4')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan3')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan1')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan2')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
lines(exp_base, exp_dt, lwd=2, col='chocolate2')
lines(exp_base, exp_dt, lwd=2, col='chocolate4')
lines(exp_base, exp_dt, lwd=2, col='chocolate3')
lines(exp_base, exp_dt, lwd=2, col='chocolate2')
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=2)
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3)
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan2')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cyan1')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
lines(exp_base, exp_dt, lwd=2, col='cadetblue1')
hist(quakes$stations, probability=T, main='Histogram of EarthQuake Stations',
xlab='Stations', col='cadetblue1')
lines(exp_base, exp_dt, lwd=2, col='chocolate')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
lines(exp_base, exp_dt, lwd=2, col='chocolate1')
legend('topright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
# question2-c
plot(x=quakes$stations, y=quakes$mag)
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19)
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, col='gray')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='darkgray')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray50')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='#E69F00')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='56B4E9')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='#56B4E9')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray50')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray50', xlab='Station',
ylab='Magnitude', main-'Scatter Plot of Mag VS Station')
# question2-c
plot(x=quakes$stations, y=quakes$mag, pch=19, cex=0.8, col='gray50', xlab='Station',
ylab='Magnitude', main='Scatter Plot of Mag VS Station')
# question2-c
linear_reg = lm(mag~stations, data=earthquake)
# question2-c
linear_reg = lm(quake$mag~quake$stations)
# question2-c
linear_reg = lm(quakes$mag~quakes$stations)
linear_reg$coefficients
abline(linear_reg, lwd=2, col='skyblue')
abline(linear_reg, lwd=3, col='skyblue')
legend('bottomright', legend=('Exp(0.02992)'), col='chocolate', lwd=3, cex=0.75)
legend('bottomright', legend=('Fitted Linear Curve'), col='skyblue', lwd=3, cex=0.75)
summary(linear_reg)
# question2-d
beta1 <- summary(linear_reg)$coeff
beta1
# question2-d
beta1 <- summary(linear_reg)$coeff[2,1]
beta1
summary(linear_reg)$coeff[2,1]
sd_beta1 <- summary(linear_reg)$coeff[2,2]
sd_beta1
lowerbd <- beta1 - pnorm(0.025) * sd_beta1
lowerbd
lowerbd <- beta1 + pnorm(0.025) * sd_beta1
lowerbd
qnorm(0.025)
lowerbd <- beta1 + pnorm(0.975) * sd_beta1
lowerbd
lowerbd <- beta1 - pnorm(0.975) * sd_beta1
lowerbd
summary(linear_reg)
beta1
sd_beta1
lowerbd <- beta1 - qnorm(0.975) * sd_beta1
lowerbd
upperbd <- beta1 + qnorm(0.975) * sd_beta1
upperbd
c(lowerbd, upperbd)
sum(sim_result >= 3.5 & sim_result <= 4.5)
sum(sim_result >= 3.5 & sim_result <= 4.5) / sim_size
pnorm(91, 77, 11.25)
pnorm(91, 76,11.25)
-2*log(0.2756)
log(0.2756)
# question 2-b
erupt_kde <- density(eruption_dt, bw=0.3)
# question 2-a
eruption_dt <- faithful$eruptions
# question 2-b
erupt_kde <- density(eruption_dt, bw=0.3)
hist(eruption_dt, breaks=20, probability=T)
lines(erupt_kde, lwd=3)
# question 2-c
erupt_kde <- density(eruption_dt, from=1, to=6, bw=0.3)
n <- length(eruption_dt)
B <- 10000
kde_bt <- matrix(NA, B, length(erupt_kde$x))
for (ii in 1:B) {
sp_index <- sample(n,n,replace=T)
sp_bt <- eruption_dt[sp_index]
sp_kde <- density(sp_bt, from=1, to=6, bw=0.3)
kde_bt[ii,] <- sp_kde$y
}
bt_sd <- sqrt(diag(var(kde_bt)))
plot(erupt_kde, lwd=3, col="blue", ylim=c(0,0.6),main="95% CI of KDE Function")
lines(x=erupt_kde$x,y=erupt_kde$y+qnorm(0.975)*bt_sd, lwd=3, col="dodgerblue",
lty=2)
lines(x=erupt_kde$x,y=erupt_kde$y-qnorm(0.975)*bt_sd, lwd=3, col="dodgerblue",
lty=2)
# question 3-a
library(smoothmestx)
install.packages(smoothmestx)
install.packages('smoothmest'')
)
.quit
')'
install.packages('smoothmest')
dexp_dt <- rdoublex(n,mu=0,lambda=1)
n=1000
dexp_dt <- rdoublex(n,mu=0,lambda=1)
# question 3-a
library(smoothmestx)
n=1000
# question 3-a
library(smoothmest)
n=1000
dexp_dt <- rdoublex(n,mu=0,lambda=1)
hist(dexp_dt)
dexp_den <- density(dexp_dt, bw=0.2, from=-6, to=6)
length(dexp_den$x)
x_base <- dexp_den$x
true_dexp <- ddoublex(x_base, mu=0, lambda=1)
dexp_true <- ddoublex(x_base, mu=0, lambda=1)
plot(x=x_base, y=dexp_den$y)
lines(x=x_base, y=dexp_true)
plot(x=x_base, y=dexp_den$y, type='l')
lines(x=x_base, y=dexp_true)
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='coral1')
lines(x=x_base, y=dexp_true, lwd=3, col-'skyblue')
lines(x=x_base, y=dexp_true, lwd=3, col='skyblue')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='skyblue')
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='coral1')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='skyblue')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='coral1')
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='skyblue')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='coral1')
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='skyblue', xlim=c(-6,6),
ylim=c(0, 0.6), xlab='X', ylab='Density', main='KDE of 1000 R.N from Double Exponential')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='coral1')
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='skyblue', xlim=c(-6,6),
ylim=c(0, 0.5), xlab='X', ylab='Density', main='KDE of 1000 R.N from Double Exponential')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='coral1')
legend('topright', legend=c('KDE', 'True'), col=c('skybluye', 'coral1'), lty=c(1,2))
legend('topright', legend=c('KDE', 'True'), col=c('skyblue', 'coral1'), lty=c(1,2))
legend('topright', legend=c('KDE', 'True'), col=c('skyblue', 'coral1'),
lty=c(1,2), lwd=3, cex=0.8)
legend('topright', legend=c('KDE', 'True'), col=c('skyblue', 'coral1'),
lty=c(1,2), lwd=2, cex=0.8)
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='skyblue', xlim=c(-6,6),
ylim=c(0, 0.5), xlab='X', ylab='Density', main='KDE of 1000 R.N from Double Exponential')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='coral1')
legend('topright', legend=c('KDE h=0.2', 'True'), col=c('skyblue', 'coral1'),
lty=c(1,2), lwd=2, cex=0.8)
plot(x=x_base, y=dexp_den$y, type='l', lwd=3, col='skyblue', xlim=c(-6,6),
ylim=c(0, 0.5), xlab='X', ylab='Density', main='KDE of 1000 R.N from Double Exponential')
lines(x=x_base, y=dexp_true, lwd=3, lty=3, col='coral1')
legend('topright', legend=c('KDE h=0.2', 'dexp lambda=1'), col=c('skyblue', 'coral1'),
lty=c(1,2), lwd=2, cex=0.8)
N = 10000
bwds <- seq(0.05, 0.5, 0.05)
mise_result <- rep(NA, length(bwds))
for (ii in 1:length(bwds)) {
bwd <- bwds[ii]
kde_result <- matrix(NA, nrow=N, ncol=n)
for (jj in 1:N) {
temp_den <- density(dexp_dt, from=-6, to=6, n=n, bw=bwd)
kde_result[jj,] <- temp_den$y
}
mse_result <- colSums((t(t(kde_result) - dexp_true))^2) /N
mise_result[ii] <- sum(mse_result)
}
mise_result
?seq
seq(1,2,n=100)
dexp_den <- density(dexp_dt, bw=0.2, from=-6, n=1000, to=6)
x_base <- dexp_den$x
dexp_true <- ddoublex(x_base, mu=0, lambda=1)
dexp_den <- density(dexp_dt, bw=0.2, from=-6, n=n, to=6)
x_base <- dexp_den$x
length(x_base)
# question 3-c
N = 10000
bwds <- seq(0.05, 0.5, 0.05)
mise_result <- rep(NA, length(bwds))
for (ii in 1:length(bwds)) {
bwd <- bwds[ii]
kde_result <- matrix(NA, nrow=N, ncol=n)
for (jj in 1:N) {
temp_den <- density(dexp_dt, from=-6, to=6, n=n, bw=bwd)
kde_result[jj,] <- temp_den$y
}
mse_result <- colSums((t(t(kde_result) - dexp_true))^2) /N
mise_result[ii] <- sum(mse_result)
}
mise_result
plot(dexp_true)
plot(mise_result)
plot(x=bwds, y=mise_result, pch=16)
plot(x=bwds, y=mise_result, pch=16, xlab='Bandwidth', ylab='MISE',
main='Bandwidth vs MISE', col='coral1')
lines(x=bwds, y=mise_result, lwd=2, col='skyblue')
lines(x=bwds, y=mise_result, lwd=3, col='skyblue')
lines(x=bwds, y=mise_result, lwd=2, col='skyblue')
plot(x=bwds, y=mise_result, pch=16, xlab='Bandwidth', ylab='MISE',
main='Bandwidth vs MISE', col='coral1')
lines(x=bwds, y=mise_result, lwd=2, col='skyblue')
bwds[which.min(mise_result)]
opt_bwd <- bwds[which.min(mise_result)]
opt_bwd
p1 <- 45/80
p2 <- 26/75
p1 - p2
n <- 80
m <- 75
p1 <- 45/80
p2 <- 26/75
p1 - p2
sd <- sqrt(p1 * (1 - p1) / n + p2 * (1 - p2) / m)
z <- (p1-p2) /sd
z
cle <- normal_test(45, 80, 26, 75)
normal_test <- function(x, nx, y, my) {
n <- nx
m <- ny
p1 <- x/nx
p2 <- y/ny
sd <- sqrt(p1 * (1 - p1) / n + p2 * (1 - p2) / m)
z <- (p1-p2) /sd
}
cle <- normal_test(45, 80, 26, 75)
normal_test <- function(x, nx, y, my) {
n <- nx
m <- my
p1 <- x/nx
p2 <- y/ny
sd <- sqrt(p1 * (1 - p1) / n + p2 * (1 - p2) / m)
z <- (p1-p2) /sd
}
cle <- normal_test(45, 80, 26, 75)
normal_test <- function(x, nx, y, my) {
n <- nx
m <- my
p1 <- x/nx
p2 <- y/my
sd <- sqrt(p1 * (1 - p1) / n + p2 * (1 - p2) / m)
z <- (p1-p2) /sd
}
cle <- normal_test(45, 80, 26, 75)
qnorm(cle)
cle
return(z)
normal_test <- function(x, nx, y, my) {
n <- nx
m <- my
p1 <- x/nx
p2 <- y/my
sd <- sqrt(p1 * (1 - p1) / n + p2 * (1 - p2) / m)
z <- (p1-p2) /sd
return(z)
}
cle <- normal_test(45, 80, 26, 75)
pnorm(cle)
1 - pnorm(cle)
dim <- normal_test(45, 80, 52, 85)
pen <- normal_test(45, 80, 35, 67)
ptn150 <- normal_test(45, 80, 37, 85)
1 - pnorm(dim)
pnorm(dim)
1 - pnorm(pen100)
pen100 <- normal_test(45, 80, 35, 67)
1 - pnorm(pen100)
1 - pnorm(pen150)
ptn150 <- normal_test(45, 80, 37, 85)
1 - pnorm(pen150)
pen150 <- normal_test(45, 80, 37, 85)
1 - pnorm(pen150)
(1 - pnorm(cle)) * 2
pnorm(dim)
(1 - pnorm(pen100)) * 2
(1 - pnorm(pen150)) * 2
cle_p <- (1 - pnorm(cle)) * 2
dim <- normal_test(45, 80, 52, 85)
dim_p <- pnorm(dim) * 2
pen100 <- normal_test(45, 80, 35, 67)
pen100_p <- (1 - pnorm(pen100)) * 2
pen150 <- normal_test(45, 80, 37, 85)
pen150_p <- (1 - pnorm(pen150)) * 2
cle_bf <- cle_p * 4
cle_b <- cle_p * 4
pen150_b <- pen150_p * 2
dim_b <- dim_p * 3/4
dim_b
cle_b
cle_b <- cle_p * 4
cle_b
cle_p
pnorm(3)
1- pnorm(3)
?hyper
?pyher
?phyper
phyper(794, 944, 656, 880)
choose(944, 794) * choose(656, 86) / choose(1600, 880)
choose(944, 794)
choose(656, 86)
choose(1600 , 880)
(57/276)^2 + 4.3*0.001
x = 3
x
y
y = 1 + 1
y # 2
log10(y)
log2(y) ##
sqrt(y)
sqrt(2)
is.vector(x)
x = 1:5
x
y = seq(from=0, to=10, by=2)
y
y = c(34, 30, 41, 35, 21)
y
mean(y)
median(y)
range(y)
range(y)[1] ## 21
range(y)[2] ## 41
min(y) ## 21
max(y) ## 41
length(y) ## 4
dim(y)
sort(y)
sd(y) ##
data()
data(cars)
?cars
names(cars)
data(cars)
names(cars)
dim(cars)
cars[, 1]
x = cars$speed
dim(x)
mean(x)
sd(x)
dat = read.table("http://www.stat.washington.edu/marzban/421/hist_dat.txt", header=F)
dat = read.table("https://www.stat.washington.edu/marzban/421/hist_dat.txt", header=F)
dat = read.table("https://www.stat.washington.edu/marzban/421/autumn19/hist_dat.txt", header=F)
x = dat[, 1]
dat
x
typeof(dat)
?read.table
typeof(x)
is.data.frame(dat)
is.data.frame(x)
is.vector(x)
is.vector(dat)
par(mfrow=c(3, 3))
hist(x, breaks = 2)
hist(x, breaks = 3)
hist(x, breaks = 4)
hist(x, breaks = 5)
hist(x, breaks = 10)
hist(x, breaks = 20)
hist(x, breaks = 30)
hist(x, breaks = 100)
hist(x, breaks = 10000)
hist(x, breaks = seq(-3, 7, by=1))
par(mfrow=c(3, 3))
hist(x, breaks = 2)
hist(x, breaks = 3)
hist(x, breaks = 4)
hist(x, breaks = 5)
hist(x, breaks = 10)
hist(x, breaks = 20)
hist(x, breaks = 30)
hist(x, breaks = 100)
hist(x, breaks = 10000)
par(mfrow=c(1,1))
setwd("User/nantang/GoogleDrive/STAT 421/HW/HW1")
setwd("User\nantang\GoogleDrive\STAT 421\HW\HW1")
?setwd
setwd("/Users/nantang/GoogleDrive/STAT 421/HW/HW1")
setwd("/User/nantang/GoogleDrive/STAT 421/HW/HW1")
setwd("/User/nantang/GoogleDrive/")
setwd("/User/nantang/GoogleDrive")
setwd("/Users/nantang/GoogleDrive")
getwd
getwd()
setwd("/Users/nantang")
setwd("/Users/nantang/GoogleDrive")
setwd("/Users/nantang/Google Drive")
setwd("/User/nantang/Google Drive/STAT 421/HW/HW1")
setwd("/User/nantang/Google Drive/STAT 421/HW/HW1/")
setwd("/User/nantang/Google Drive/")
setwd("/User/nantang/Google Drive")
setwd("/User/nantang")
setwd("/Users/nantang/Google Drive")
setwd("/Users/nantang/Google Drive/STAT 421/HW/HW1/")
pdf("hello.pdf")
?pdf
par(mfrow=c(1,2))
hist(x)
hist(x, freq=F)
dev.off()
dbinom(0, 100, 0.005)
dbinom(0:3, 100, 0.005)
?dbinom
dbinom(0, 1, 0)
choose(100,0)
0.005^0*0.995^100
sum(dbinom(0:3, 100, 0.005))
plot(0:3, dbinom(0:3, 100, 0.005))
x = 0:10
plot(x, dpois(x, 1), type="b")
lines(x, dpois(x, 4), type"b", col=2)
lines(x, dpois(x, 4), type="b", col=2)
lines(x, dpois(x, 6), type="b", col=3)
x = 0:100
plot(x, dnorm(x, 40, 10))
plot(x, pnorm(x, 40, 10))
plot(x, qnorm(x, 40, 10))
plot(x, dnorm(x, 40, 10))
rbinom(200, 10, 0.5)
rpois(100, 4)
plot(rpois(100, 4))
plot(sort(rpois(100, 4))
))
plot(sort(rpois(100, 4))
)
x = rnorm(10000, 0, 1)
hist(x, breaks=200)
boxplot(x, range=0)
boxplot(x, range=1.5)
boxplot(x, range=12)
boxplot(x, range=2)
boxplot(x, range=0)
boxplot(x, x)
quantile(x, prob=c(0, 0.25, 0.5, 0.75, 1))
x = rnorm(500, 0, 1)
hist(x)
qqnorm(x)
x = rexp(500, 1)
hist(x)
qqnorm(x)
library(lattice)
x = rexp(500, 1)
hist(x)
qqmath(x, dist=qexp)
